@page
@model FytSoa.Web.Pages.FytAdmin.Stock.ImportValidationModel
@{
    ViewData["Title"] = "入库单效验";
    Layout = "~/Pages/FytAdmin/_Layout.cshtml";
}
<style>
    .layui-btn .layui-icon {
        vertical-align: middle;
        top: -2px;
        position: relative;
    }
    .fyt-table td{padding:6px 15px;}
    .fyt-table th{padding:10px 15px;}
</style>
<div id="app">
    <div class="layui-form list-search" style="margin:0px 12px 0 12px;">
        <form id="from-app" class="layui-form" action="">
            <div class="layui-inline">
                <input class="layui-input" id="Code" name="Code" lay-verify="required" lay-verType="tips" autocomplete="off" placeholder="条形码">
            </div>
            <div class="layui-inline">
                <input class="layui-input" id="Count" name="Count" value="1" autocomplete="off" placeholder="数量">
            </div>
            <div class="layui-inline">
                <button class="layui-btn" lay-submit="" lay-filter="submit">立即提交</button>
                <button type="button" class="layui-btn" @@click="validation" style="margin-left:100px;" v-html="btnHtml"></button>
            </div>
        </form>
    </div>
    <div class="layui-row">
        <div class="layui-col-xs12 layui-col-sm12 layui-col-md6">
            <div class="list-wall" style="padding-top:0px; padding-right:6px;">
                <table class="layui-table fyt-table">
                    <thead>
                        <tr>
                            <th width="40"><span>序号</span></th>
                            <th><span>条形码</span></th>
                            <th width="60"><span>数量</span></th>
                            <th width="100"><span>异常状态</span></th>
                            <th width="60"><span>操作</span></th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="it,index in tabList">
                            <td align="center">{{index+1}}</td>
                            <td>{{it.Code}}</td>
                            <td><input type="number" v-model="it.Count" class="layui-input" style="height:26px;" /></td>
                            <td v-html="it.status"></td>
                            <td><i @@click="delTableRow(index)" class="layui-icon layui-icon-close" style="cursor:pointer"></i></td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
        <div class="layui-col-xs12 layui-col-sm12 layui-col-md6">
            <div class="list-wall" style="padding-top:0px;padding-left:6px;">
                <table class="layui-hide" id="tablist" lay-filter="usertool"></table>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript" src="~/themes/js/modules/vue.js"></script>
<script>
    var cusFun,vm = new Vue({
        el: '#app',
        data: {
            tabList: [
                //{ 'Code': 'abc','status':'', 'Count': '1' }
            ],
            btnHtml:'<i class="layui-icon layui-icon-read"></i> 确定效验'
        },
        methods: {
            delTableRow: function (index) {
                this.tabList.splice(index,1);
            },
            validation: function () {
                cusFun.startValid();
            }
        }
    });
    layui.config({
        base: '/themes/js/modules/'
    }).use(['table','layer', 'jquery', 'common', 'form'], function () {
        var table = layui.table,form = layui.form, $ = layui.$, os = layui.common,packGuid="@Model.PackGuid",resList;
        $("#Code").focus();
        /*$("#Code").keyup(function () {
            if ($("#Code").val().length == 16) {
                var isEx = false;
                for (var i = 0; i < vm.tabList.length; i++) {
                    if (vm.tabList[i].Code == $("#Code").val()) {
                        isEx = true;
                        vm.tabList[i].Count = parseInt(vm.tabList[i].Count) + parseInt($("#Count").val());
                    }
                }
                if (!isEx) {
                    vm.tabList.push({ 'Code': $("#Code").val(), 'Count': $("#Count").val() });
                }
                $("#Code").val('');
                $("#Code").focus();
            }
        });*/
        table.render({
            elem: '#tablist',
            url: '/api/stock/inoutlist?types=1',
            cols: [
                [
                    { field: 'code', title: '条形码', fixed: 'left' },
                    { field: 'stockSum', width:80, title: '数量' },
                ]
            ],
            height: $(window).height() - 78,
            page: false,
            limit: 5000,
            id: 'tables',
            where: {
                packguid: packGuid,
            },
            done: function (res, curr, count) {
                resList = res.data;
            }
        });
        cusFun = {
            startValid: function () {
                vm.btnHtml = '<i class="layui-icon layui-icon-loading-1 layui-icon layui-anim layui-anim-rotate layui-anim-loop"></i> 正在效验';
                var resArr = [];
                //console.log(vm.tabList);
                //console.log(resList);
                //定义临时存放的数组
                var tempOrderList = [];
                var noList = [];
                //先查询不存在右侧内的商品
                $.each(vm.tabList, function (i, item) {
                    var arrRes = cusFun.isExArray(resList, item.Code);
                    if (!arrRes[0]) {
                        noList.push(item);
                    }
                });
                //已入库单完成为标准开始对比新的列表
                $.each(resList, function (i, item) {
                    var arrRes = cusFun.isInArray(vm.tabList, item.code);
                    //如果新的列表中存在已完成的
                    if (arrRes[0]) {
                        if (parseInt(arrRes[1].Count) === item.stockSum) {
                            tempOrderList.push({ 'Code': item.code, 'status': '<span class="layui-badge-dot layui-bg-green"></span>', 'Count': arrRes[1].Count });
                        } else {
                            //如果数量不同，也是差异数据状态
                            tempOrderList.push({ 'Code': item.code, 'status': '<span style="color:red">数量异常</span>', 'Count': arrRes[1].Count });
                        }
                    } else {
                        //如果不存在，则增加一条差异数据
                        tempOrderList.push({ 'Code': item.code, 'status': '<span style="color:red">缺少</span>', 'Count': 0 });
                    }
                });
                vm.tabList = tempOrderList;
                if (noList.length > 0) {
                    $.each(noList, function (i, item) {
                        vm.tabList.push({ 'Code': item.Code, 'status': '<span style="color:red">不存在</span>', 'Count': item.Count });
                    });
                }
                /*$.each(vm.tabList, function (i, item) {
                    var count = 0, isExist;
                    $.each(resList, function (j, row) {
                        if (row.code == item.Code && row.stockSum == parseInt(item.Count)) {
                            count++;
                        }
                    });
                    if (count === 0) {
                        item.status = '<span style="color:red">异常</span>';
                        resArr.push(item);
                    } else {
                        item.status = '<span class="layui-badge-dot layui-bg-green"></span>';
                    }
                });
                layer.alert(JSON.stringify(resArr), {
                    title: '最终对比结果'
                })*/
                vm.btnHtml = '<i class="layui-icon layui-icon-read"></i> 确定效验';
            },
            //判断一个值是否在数组中存在，存在返回true  并返回当前数组对象
            isInArray: function (arr, value) {
                var arrIndex = 0;
                for (var i = 0; i < arr.length; i++) {
                    if (value === arr[i].Code) {
                        return [true,arr[i]];
                    }
                }
                return [false,null];
            },
            isExArray: function (arr, value) {
                var arrIndex = 0;
                for (var i = 0; i < arr.length; i++) {
                    if (value === arr[i].code) {
                        return [true, arr[i]];
                    }
                }
                return [false, null];
            }
        }

        //对比提交
        form.on('submit(submit)', function (data) {
            var isEx = false;
            for (var i = 0; i < vm.tabList.length; i++) {
                if (vm.tabList[i].Code == data.field.Code) {
                    isEx = true;
                    vm.tabList[i].Count = parseInt(vm.tabList[i].Count) + parseInt($("#Count").val());
                }
            }
            if (!isEx) {
                vm.tabList.push({ 'Code': data.field.Code, 'status': '<span class="layui-badge-dot layui-bg-green"></span>', 'Count': data.field.Count });
            }
            $("#Code").val('');
            $("#Code").focus();
            return false;
        });
    });
</script>

